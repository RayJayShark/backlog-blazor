@using BacklogBlazor_Shared.Models
@using BacklogBlazor.Icons

@if (!string.IsNullOrWhiteSpace(_notification))
{
    <div class="bg-red-300 rounded-md">
        @_notification
        <button type="button" @onclick="@(() => _notification = string.Empty)">X</button>
    </div>
}

<EditForm Model="_backlog" OnValidSubmit="SaveBacklog" class="@Class">
    <div class="flex flex-col">
        <div class="flex flex-row text-xl mb-4 items-center">
            <label class="mr-2 font-semibold">Title:</label>
            <InputText @bind-Value="_backlog.Name" placeholder="Enter a title..." class="font-bold border border-slate-300 rounded p-1" />
        </div>
        <div class="flex flex-row text-lg mb-8 items-start">
            <label class="mr-2">Description:</label>
            <InputTextArea @bind-Value="_backlog.Description" placeholder="Enter a description..." rows="2" class="resize-none border border-slate-300 rounded w-3/4 p-1" />
        </div>
    </div>

    <table class="relative isolate z-10 border border-slate-400 border-separate border-spacing-0 bg-slate-50 rounded drop-shadow-md w-full">
        <thead>
        <tr class="divide-x divide-slate-400">
            <th class="border-b border-slate-400 w-6">Rank</th>
            <th class="border-b border-slate-400 w-1/2 min-w-[400px]">
                <div class="px-2 flex justify-between items-center">
                    @if (_typeaheadGames.Any(g => g.Game.Id >= 0))
                    {
                        <div>@*This exists to center the heading*@</div>
                        <span>Game</span>
                        <button type="button" class="mx-4 my-2" title="Refresh data for all games" disabled="@_disableRefresh"
                                @onclick="@(() => RefreshGamesData(0, Backlog.Games.ToArray()))">
                            <HeroIcons @ref="_refreshIcons[0]" Icon="HeroIcons.HeroIcon.ArrowPath_Outline"/>
                        </button>
                    }
                    else
                    {
                        <span>Game</span>
                    }
                </div>
            </th>
            <th class="border-b border-slate-400 w-1/6">Estimated Hours</th>
            <th class="border-b border-slate-400 w-1/6">Current Hours</th>
            <th class="border-b border-slate-400 w-6">Completed?</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var game in _typeaheadGames)
        {
            <tr class="divide-x divide-slate-400">
                <td class="border-b border-slate-400">
                    <div class="flex flex-row justify-evenly">
                        <button type="button"><HeroIcons Icon="HeroIcons.HeroIcon.Bars2_Outline" Class="w-8 h-7 p-1 border rounded border-slate-400 hover:border-slate-600"/></button>
                        <InputNumber TValue="int" class="w-8 font-bold text-center border rounded border-slate-300" Value="@game.Game.Rank" ValueChanged="@(rank => RankChanged(_typeaheadGames.IndexOf(game), rank))" ValueExpression="() => game.Game.Rank" min="1" />
                    </div>
                </td>
                <td class="border-b border-slate-400 px-2 py-1">
                    <div class="flex justify-between">
                        @if (game.DisableTypeahead)
                        {
                            <BacklogGame Game="@game.Game" OnTimeClicked="@(newTime => game.Game.EstimateCompleteHours = newTime)"/>
                            <button type="button" title="Change game" @onclick="@(() => game.DisableTypeahead = false)">
                                <HeroIcons Icon="HeroIcons.HeroIcon.Pencil_Solid" Class="w-4 h-4"/>
                            </button>
                        }
                        else
                        {
                            <BlazoredTypeahead TItem="@Game" TValue="@Game" @bind-Value="@game.Game" SearchMethod="@(searchText => SearchForGames(searchText, game.Game.Rank))"
                                               Debounce="500" placeholder="Search for a game..." DisableClear="true">
                                <SelectedTemplate Context="select_context">
                                    @if (game.Game.Id < 0)
                                    {
                                        <div>Search for a game...</div>
                                    }
                                    else
                                    {
                                        <BacklogGame Game="select_context"/>
                                        <button type="button" title="Save game" @onclick="@(() => game.DisableTypeahead = true)">
                                            <HeroIcons Icon="HeroIcons.HeroIcon.CheckCircle_Solid" Class="w-5 h-5"/>
                                        </button>
                                    }
                                </SelectedTemplate>
                                <ResultTemplate Context="result_context">
                                    <div class="flex flex-col">
                                        <div class="flex flex-row items-center">
                                            <div class="group">
                                                <img alt="@(result_context.Name + " Cover")" src="@result_context.GameImageUrl" class="w-8"/>
                                                <div class="fixed flex flex-row items-center drop-shadow-md space-x-0 translate-x-10 -translate-y-[56%] z-50 transition-all duration-300 invisible opacity-0 group-hover:opacity-100 group-hover:visible">
                                                    <div class="w-0 h-0 border-y-8 border-y-transparent border-r-[15px] border-r-slate-500 border-opacity-90"/>
                                                    <div class="p-3 bg-slate-500/90 rounded-md">
                                                        <img alt="@(result_context.Name + " Cover Enlarged")" src="@(@result_context.GameImageUrl + "?width=250")"/>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="font-bold">@result_context.Name</div>
                                        </div>
                                        <div class="flex flex-row items-center">
                                            <div>Main: @result_context.CompleteMainTime.TotalHours.ToString("0.0")</div>
                                            <div>Main+: @result_context.CompletePlusTime.TotalHours.ToString("0.0")</div>
                                            <div>100%: @result_context.Complete100Time.TotalHours.ToString("0.0")</div>
                                        </div>
                                    </div>
                                </ResultTemplate>
                            </BlazoredTypeahead>
                        }
                        @if (game.Game.Id >= 0)
                        {
                            <button type="button" class="mx-4" title="Refresh game data" disabled="@_disableRefresh"
                                    @onclick="@(() => RefreshGamesData(game.Game.Rank, game.Game))">
                                <HeroIcons @ref="_refreshIcons[game.Game.Rank]" Icon="HeroIcons.HeroIcon.ArrowPath_Outline"/>
                            </button>
                        }
                    </div>
                </td>
                <td class="border-b border-slate-400 text-center">
                    <InputNumber TValue="double" class="w-20 font-bold text-center border rounded border-slate-300" @bind-Value="@game.Game.EstimateCompleteHours" min="0"/>
                </td>
                <td class="border-b border-slate-400 text-center">
                    <InputNumber TValue="double" class="w-20 font-bold text-center border rounded border-slate-300" @bind-Value="@game.Game.CurrentHours" min="0"/>
                </td>
                <td class="border-b border-slate-400 text-center"><InputCheckbox @bind-Value="@game.Game.Completed"/></td>
            </tr>
        }
        <tr class>
            <td colspan="5" class="border-b border-slate-400">
                <button type="button" @onclick="AddGame">Add Game</button>
            </td>
        </tr>
        </tbody>
        <tfoot>
        <tr class="divide-x divide-slate-400">
            <td class="font-bold text-center">Totals</td>
            <td class="font-bold text-center">@_typeaheadGames.Count Games</td>
            <td class="font-bold text-center">@_typeaheadGames.Sum(g => g.Game.EstimateCompleteHours).ToString("0.0")</td>
            <td class="font-bold text-center">@_typeaheadGames.Sum(g => g.Game.CurrentHours).ToString("0.0")</td>
            <td class="font-bold text-center" title="Completed/Total">@_typeaheadGames.Count(g => g.Game.Completed)/@_typeaheadGames.Count</td>
        </tr>
        </tfoot>
    </table>

    <div class="isolate">
        <button type="submit" disabled="@_disableSave" class="mt-2 p-2 text-white font-bold drop-shadow-md bg-amber-600 rounded-lg hover:bg-amber-700 disabled:opacity-50 disabled:bg-amber-800"><span class="drop-shadow-lg">Save Backlog</span></button>
        <button type="button" class="mt-2 ml-2 p-1 font-semibold drop-shadow-md border border-slate-500 rounded-lg" @onclick="@(() => DoneEditing.InvokeAsync())">Cancel</button>
    </div>
</EditForm>